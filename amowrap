# Name :: AmoWrap

# Me
MyNameIs=$(basename $0)

# RAD Opts are Raad
shopt -s extglob

# Config File
AmoConf=$MyNameIs.conf

# Load Configuration and Libs
source ./$MyNameIs.conf
source ./lib$MyNameIs.sh

# Validate Commands used by AmoWrap
TheCmds=(aws grep wc)

for CheckCmd in ${!TheCmds[*]}
do
	Validate ${TheCmds[$CheckCmd]} || \
		Failed Can\'t Find Command ${TheCmds[CheckCmd]}	 

	eval "$(echo ${TheCmds[$CheckCmd]})=$Results"
done

# Shall we debug??
[ "$Debug" = "no" ] && exec 2>/dev/null
[ "$Debug" = "yes" ] && set -x

# Usage/Help
Usage=$(cat <<EOF
Wraps aws cli commands to be more usefull for meself
Usage:

  Global Commands:
		$MyNameIs ls regions

	Instance Commands:

	  List host by hostname Glob:

	    $MyNameIs list host name dataservice*

    Find Host by ip address:

      $MyNameIs list host public-ip 4.2.2.2

      $MyNameIs list host private 10.0.0.1

EOF)

source ./libs/*.sh

# No options or help
[ -z "$1" ] || [[ "$1" == +(--help|-h|help) ]] && echo "$Usage" \
		&& exit 2

# Option controls 
[[ "$1" == +(ls|list|show) && "$2" == +(opts|options) ]] \
		&& List_Options

# Global Commands

# Data Centers (Regions)
[[ "$1" == +(ls|list|show) && "$2" == +(dc|regions) ]] \
		&& aws ec2 describe-regions --query Regions[*].[RegionName,Endpoint] --output table

# Instace Commands

# Locate Instance
[[ "$1" == +(ls|list|show) && "$2" == +(instance|host) ]] \
		&& case "$3" in
		name) 
			aws ec2 describe-instances --filters 'Name=tag:Name,Values='$4'' --output table --query "$InstanceQuery"
			exit 0
			;;

		private)
			aws ec2 describe-instances --filters 'Name=private-ip-address,Values='$4'' --output table --query "$InstanceQuery"
			exit 0
			;;

			public)
				aws ec2 describe-instances --filters 'Name=ip-address,Values='$4'' --output table --query "$InstanceQuery"
				exit 0
				;;
 			*)
						echo "$Usage"
						exit 0
						;;
		esac
